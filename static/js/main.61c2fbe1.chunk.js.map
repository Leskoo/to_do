{"version":3,"sources":["TodoHeader.js","TodoFilter.js","TodoFooter.js","TodoItem.js","TodoList.js","Content.js","App.js","index.js"],"names":["TodoHeader","state","tittle","handleInputChange","event","setState","target","value","onSubmit","preventDefault","replace","addTodo","props","id","Date","title","completed","this","className","type","placeholder","maxLength","onChange","React","Component","TodoFilter","onClick","children","filterType","href","classnames","selected","toLowerCase","TodoFooter","todos","currentFilter","setFilter","onClearTodos","filter","item","length","some","TodoItem","todo","onCheck","onDelete","checked","htmlFor","TodoList","map","todoItem","key","Content","allCompleted","completeAll","todosLength","filters","all","active","App","prevState","toggleTodoCompleted","every","deleteTodo","markAllTodo","clearCompleted","visibleTodos","filteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61c2fbe1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoHeader extends React.Component {\r\n  state = {\r\n    tittle: '',\r\n  };\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({\r\n      tittle: event.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState(({ tittle }) => {\r\n      if (!tittle.replace(/^\\s+/, '')) {\r\n        return { tittle };\r\n      }\r\n\r\n      const { addTodo } = this.props;\r\n\r\n      addTodo({\r\n        id: +new Date(),\r\n        title: tittle,\r\n        completed: false,\r\n      });\r\n\r\n      return { tittle: '' };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tittle } = this.state;\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            className=\"new-todo\"\r\n            type=\"text\"\r\n            value={tittle}\r\n            placeholder=\"What needs to be done?\"\r\n            maxLength={30}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nTodoHeader.propTypes = { addTodo: PropTypes.func.isRequired };\r\n\r\nexport default TodoHeader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TodoFilter = ({ onClick, children, filterType }) => (\r\n  <li>\r\n    <a\r\n      href={`#/${filterType === 'all' ? '' : filterType}`}\r\n      className={classnames({\r\n        selected: filterType === children.toLowerCase(),\r\n      })}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </a>\r\n  </li>\r\n);\r\n\r\nTodoFilter.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  filterType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TodoFilter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoFilter from './TodoFilter';\r\n\r\nconst TodoFooter\r\n  = ({ todos, currentFilter, setFilter, onClearTodos }) => (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">\r\n        {`${todos.filter(item => !item.completed).length} items left`}\r\n      </span>\r\n      <ul className=\"filters\">\r\n        <TodoFilter\r\n          onClick={() => setFilter('all')}\r\n          filterType={currentFilter}\r\n        >\r\n          All\r\n        </TodoFilter>\r\n        <TodoFilter\r\n          onClick={() => setFilter('active')}\r\n          filterType={currentFilter}\r\n        >\r\n          Active\r\n        </TodoFilter>\r\n        <TodoFilter\r\n          onClick={() => setFilter('completed')}\r\n          filterType={currentFilter}\r\n        >\r\n          Completed\r\n        </TodoFilter>\r\n      </ul>\r\n      {todos.some(item => item.completed) && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"clear-completed\"\r\n          onClick={onClearTodos}\r\n        >\r\n          Clear completed\r\n        </button>\r\n      )}\r\n    </footer>\r\n  );\r\n\r\nTodoFooter.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  currentFilter: PropTypes.string.isRequired,\r\n  setFilter: PropTypes.func.isRequired,\r\n  onClearTodos: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoFooter;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nconst TodoItem = ({ todo, onCheck, onDelete }) => (\r\n  <li className={classnames({ completed: todo.completed })}>\r\n    <div className=\"view\">\r\n      <input\r\n        id={todo.id}\r\n        className=\"toggle\"\r\n        type=\"checkbox\"\r\n        checked={todo.completed}\r\n        onChange={() => onCheck(todo.id)}\r\n      />\r\n      <label htmlFor={todo.id}>{todo.title}</label>\r\n      <button\r\n        type=\"button\"\r\n        className=\"destroy\"\r\n        onClick={() => onDelete(todo.id)}\r\n      />\r\n    </div>\r\n  </li>\r\n);\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes\r\n    .shape({\r\n      completed: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  onCheck: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({ todos, onCheck, onDelete }) => (\r\n  <ul className=\"todo-list\">\r\n    {todos.map(todoItem => (\r\n      <TodoItem\r\n        todo={todoItem}\r\n        key={todoItem.id}\r\n        onCheck={onCheck}\r\n        onDelete={onDelete}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes\r\n    .arrayOf(PropTypes.shape({\r\n      completed: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n  onCheck: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoList from './TodoList';\r\n\r\nconst Content = (props) => {\r\n  const {\r\n    todos,\r\n    allCompleted,\r\n    onCheck,\r\n    onDelete,\r\n    completeAll,\r\n    todosLength,\r\n  } = props;\r\n\r\n  return (\r\n    <section className=\"main\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"toggle-all\"\r\n        className=\"toggle-all\"\r\n        onChange={completeAll}\r\n        checked={allCompleted}\r\n      />\r\n      {todosLength > 0 && (\r\n        <label htmlFor=\"toggle-all\">\r\n          {allCompleted ? 'Mark all as active' : 'Mark all as completed'}\r\n        </label>\r\n      )}\r\n      <TodoList\r\n        todos={todos}\r\n        onCheck={onCheck}\r\n        onDelete={onDelete}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nContent.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  allCompleted: PropTypes.bool.isRequired,\r\n  onCheck: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  completeAll: PropTypes.func.isRequired,\r\n  todosLength: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Content;","import React from 'react';\r\nimport TodoHeader from './TodoHeader';\r\nimport TodoFooter from './TodoFooter';\r\nimport Content from './Content';\r\n\r\nconst filters = {\r\n  all: 'all',\r\n  completed: 'completed',\r\n  active: 'active',\r\n};\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    completed: false,\r\n    filter: filters.all,\r\n  };\r\n\r\n  addTodo = (todo) => {\r\n    this.setState(prevState => ({\r\n      todos: [...prevState.todos, todo],\r\n    }));\r\n  };\r\n\r\n  toggleTodoCompleted = (id) => {\r\n    this.setState(({ todos }) => (\r\n      { todos: todos.map(item => (\r\n        item.id === id\r\n          ? {\r\n            ...item, completed: !item.completed,\r\n          } : item)) }));\r\n\r\n    this.setState(({ todos }) => (\r\n      { completed: todos.every(item => item.completed) }\r\n    ));\r\n  };\r\n\r\n  deleteTodo = (id) => {\r\n    this.setState(({ todos }) => (\r\n      { todos: todos.filter(item => item.id !== id) }\r\n    ));\r\n  };\r\n\r\n  markAllTodo = () => {\r\n    this.setState(({ todos, completed }) => ({\r\n      completed: !completed,\r\n      todos: todos\r\n        .map(item => ({\r\n          ...item, completed: !completed,\r\n        })),\r\n    }));\r\n  };\r\n\r\n  clearCompleted= () => {\r\n    this.setState(({ todos }) => (\r\n      { todos: todos.filter(item => !item.completed) }\r\n    ));\r\n  };\r\n\r\n  setFilter = (filter) => {\r\n    this.setState({ filter: filters[filter] });\r\n  };\r\n\r\n  render() {\r\n    const { todos, completed, filter } = this.state;\r\n    const filteredTodos = (filterType) => {\r\n      switch (filterType) {\r\n        case 'active':\r\n          return todos.filter(todo => !todo.completed);\r\n        case 'completed':\r\n          return todos.filter(todo => todo.completed);\r\n        default:\r\n          return todos;\r\n      }\r\n    };\r\n\r\n    const visibleTodos = filteredTodos(filter);\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <TodoHeader addTodo={this.addTodo} />\r\n        <Content\r\n          todos={visibleTodos}\r\n          completed={completed}\r\n          onCheck={this.toggleTodoCompleted}\r\n          onDelete={this.deleteTodo}\r\n          completeAll={this.markAllTodo}\r\n          todosLength={todos.length}\r\n        />\r\n        {todos.length > 0 && (\r\n          <TodoFooter\r\n            todos={todos}\r\n            currentFilter={filter}\r\n            setFilter={this.setFilter}\r\n            onClearTodos={this.clearCompleted}\r\n          />\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './base.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}